# This is a basic workflow to help you get started with Actions
name: Android Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  pull_request:
    branches: ["master"]
  push:
    branches: ["master"]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Setup Java JDK
        uses: actions/setup-java@v4.0.0
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Runs a single command using the runners shell
      - name: Build with Gradle
        run: ./gradlew build

      - name: Extract Android Version
        run: |
          versionCode=$(grep "versionCode" app/build.gradle | awk '{print $2}')
          versionName=$(grep "versionName" app/build.gradle | awk '{print $2}')
          echo "Version Code: $versionCode"
          echo "Version Name: $versionName"

      - name: Package Artifact
        id: package
        run: |
            mkdir artifacts
            artifact_name="myapp-${versionName}-${versionCode}.apk"
            cp app/build/outputs/apk/debug/app-debug.apk artifacts/$artifact_name
            echo "::set-output name=artifact_name::$artifact_name"
          
      - name: Get Last Commit Message
        id: commit_message
        run: echo "::set-output name=commit_message::$(git log -1 --pretty=%B)"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.package.outputs.artifact_name }}
          path: artifacts/

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*
          tag_name: v${versionName}
          name: Release ${versionName}
          body: ${{ steps.commit_message.outputs.commit_message }}
          draft: false
          prerelease: false
          token: ${{ secrets.TOKEN }}