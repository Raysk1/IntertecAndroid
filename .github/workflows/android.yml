name: Android Build and Sign

on:
  pull_request:
    branches: [ "master" ]
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Setup Java JDK
        uses: actions/setup-java@v4.0.0
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew assembleRelease

      - name: Extract Android Version
        id: version
        run: |
          versionCode=$(grep "versionCode" app/build.gradle | awk '{print $2}')
          versionName=$(grep "versionName" app/build.gradle | sed -n 's/.*versionName "\([^"]*\)".*/\1/p')
          echo "Version Code: $versionCode"
          echo "Version Name: $versionName"
          echo "versionName=$versionName" >> $GITHUB_OUTPUT

      - name: Package Artifact
        id: package
        run: |
          artifact_name="intertec-${{ steps.version.outputs.versionName }}.apk"
          echo "artifact_name=$artifact_name" >> $GITHUB_OUTPUT

      - name: Setup build tool version variable
        shell: bash
        run: |
          BUILD_TOOL_VERSION=$(ls /usr/local/lib/android/sdk/build-tools/ | tail -n 1)
          echo "BUILD_TOOL_VERSION=$BUILD_TOOL_VERSION" >> $GITHUB_ENV
          echo Last build tool version is: $BUILD_TOOL_VERSION

      - name: Android Sign
        uses: noriban/sign-android-release@v5
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: ${{ env.BUILD_TOOL_VERSION }}


      - name: Get Last Commit Message
        id: commit_message
        run: echo "commit_message=$(git log -1 --pretty=%B)"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.package.outputs.artifact_name }}
          path: ${{steps.sign_app.outputs.signedReleaseFile}}

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: "${{steps.sign_app.outputs.signedReleaseFile}}/*"
          tag_name: ${{ steps.version.outputs.versionName }}
          name: Release ${{ steps.package.outputs.artifact_name }}
          body: ${{ steps.commit_message.outputs.commit_message }}
          draft: false
          prerelease: false
          token: ${{ secrets.TOKEN }}
