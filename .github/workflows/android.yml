name: Android Build and Sign

on:
  pull_request:
    branches: [ "master" ]
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Setup Java JDK
        uses: actions/setup-java@v4.0.0
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Extract Android Version
        id: version
        run: |
          versionCode=$(grep "versionCode" app/build.gradle | awk '{print $2}')
          versionName=$(grep "versionName" app/build.gradle | sed -n 's/.versionName "\([^"]\)".*/\1/p')
          echo "Version Code: $versionCode"
          echo "Version Name: $versionName"
          echo "versionName=$versionName" >> $GITHUB_OUTPUT

      - name: Package Artifact
        id: package
        run: |
          mkdir -p artifacts
          artifact_name="intertec-${{ steps.version.outputs.versionName }}.apk"
          ls
          echo "artifact_name=$artifact_name" >> $GITHUB_OUTPUT

      - name: Android Sign
        # You may pin to the exact commit or the version.
        uses: Tlaster/android-sign@v1.2.2
        with:
          releaseDirectory: app/build/outputs/apk/debug/
          signingKeyBase64: ${{ secrets.SIGNING_KEY_BASE64 }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          buildDirectory: artifacts/
          output: artifacts/

      - name: Get Last Commit Message
        id: commit_message
        run: echo "commit_message=$(git log -1 --pretty=%B)"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.package.outputs.artifact_name }}
          path: artifacts/

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*
          tag_name: ${{ steps.version.outputs.versionName }}
          name: Release ${{ steps.package.outputs.artifact_name }}
          body: ${{ steps.commit_message.outputs.commit_message }}
          draft: false
          prerelease: false
          token: ${{ secrets.TOKEN }}
